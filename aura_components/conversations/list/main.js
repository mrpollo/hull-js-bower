this.Hull=this.Hull||{},this.Hull.templates=this.Hull.templates||{},this.Hull.templates._default=this.Hull.templates._default||{},Hull.templates._default["conversations/list/list"]=function(t,a,e,s,n){function i(t,a){var s,n,i,o="";return o+='\n  <div class="media item" data-hull-action="select" data-hull-id="',(n=e.id)?s=n.call(t,{hash:{},data:a}):(n=t&&t.id,s=typeof n===d?n.call(t,{hash:{},data:a}):n),o+=u(s)+'">\n    <a class="pull-left" href="#">\n      <img class="media-object img-rounded" src="'+u((s=t&&t.actor,s=null==s||s===!1?s:s.picture,typeof s===d?s.apply(t):s))+'" width="50" height="50">\n    </a>\n    <div class="media-body">\n      <h5 class="media-heading">\n        <span class="">\n        ',s=e["if"].call(t,t&&t.messages_count_unread,{hash:{},inverse:p.noop,fn:p.program(2,l,a),data:a}),(s||0===s)&&(o+=s),o+="\n        </span>\n        ",(n=e.name)?s=n.call(t,{hash:{},data:a}):(n=t&&t.name,s=typeof n===d?n.call(t,{hash:{},data:a}):n),o+=u(s)+"\n      </h5>\n      <small>updated "+u((n=e.fromNow||t&&t.fromNow,i={hash:{},data:a},n?n.call(t,t&&t.updated_at,i):f.call(t,"fromNow",t&&t.updated_at,i)))+"</small>\n    </div>\n  </div>\n"}function l(t,a){var s,n,i="";return i+='\n          <span class="badge badge-important pull-right">\n            <i class="icon-envelope icon-white"></i> ',(n=e.messages_count_unread)?s=n.call(t,{hash:{},data:a}):(n=t&&t.messages_count_unread,s=typeof n===d?n.call(t,{hash:{},data:a}):n),i+=u(s)+"\n          </span>\n        "}function o(t,a){var s,n="";return n+="\n  ",s=e["if"].call(t,(s=t&&t.errors,null==s||s===!1?s:s.conversations),{hash:{},inverse:p.noop,fn:p.program(5,r,a),data:a}),(s||0===s)&&(n+=s),n+="\n"}function r(){return'\n    <div class="alert alert-error">\n      Unable to retrieve the conversations.\n    </div>\n  '}this.compilerInfo=[4,">= 1.0.0"],e=this.merge(e,t.helpers),n=n||{};var h,c="",d="function",u=this.escapeExpression,p=this,f=e.helperMissing;return h=e.each.call(a,a&&a.conversations,{hash:{},inverse:p.program(4,o,n),fn:p.program(1,i,n),data:n}),(h||0===h)&&(c+=h),c+="\n"},Hull.component("conversations/list@hull",{type:"Hull",templates:["list"],refreshEvents:["model.hull.me.change"],actions:{select:"select"},options:{focus:!1},datasources:{conversations:function(){var t=this.options.id?this.options.id:"";return t+="/conversations",this.api(t,{visibility:this.options.visibility||void 0})}},initialize:function(){this.sandbox.on("hull.conversations.*",function(t){this.options.id=t,this.render(),this.highlight(t)},this),this.sandbox.on("hull.conversation.thread.delete",function(){this.render(),this.sandbox.emit("hull.conversation.select",null)},this)},beforeRender:function(t,a){return t.errors=a,t},highlight:function(t){var a=this.$el.find('[data-hull-id="'+t+'"]');this.$el.find('[data-hull-action="select"]').not(a).removeClass("selected"),a.addClass("selected")},select:function(t,a){this.highlight(a.data.id),this.sandbox.emit("hull.conversation.select",a.data.id)}});